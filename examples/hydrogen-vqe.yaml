# Workflow API version
apiVersion: io.orquestra.workflow/1.0.0

# Prefix for workflow ID
name: vqe-h2-example

imports:
- name: z-quantum-core
  type: git
  parameters:
    url: "git@github.com:zapatacomputing/z-quantum-core.git"
    branch: "workflow-v1"
- name: qe-openfermion
  type: git
  parameters:
    url: "git@github.com:zapatacomputing/qe-openfermion.git"
    branch: "v1-revisions"
- name: z-quantum-vqe
  type: git
  parameters:
    url: "git@github.com:zapatacomputing/z-quantum-vqe.git"
    branch: "workflow-v1"
- name: z-quantum-optimizers
  type: git
  parameters:
    url: "git@github.com:zapatacomputing/z-quantum-optimizers.git"
    branch: "workflow-v1"
- name: diatomic-molecule
  type: git
  parameters:
    url: "git@github.com:zapatacomputing/tutorial-1-diatomic-molecule.git"
    branch: "workflow-v1"
- name: qe-psi4
  type: git
  parameters:
    url: "git@github.com:zapatacomputing/qe-psi4.git"
    branch: "workflow-v1"
- name: qe-qhipster
  type: git
  parameters:
    url: "git@github.com:zapatacomputing/qe-qhipster.git"
    branch: "workflow-v1"

steps:
- name: create-molecule
  config:
    runtime:
      language: python3
      imports: [diatomic-molecule]
      parameters:
        file: diatomic-molecule/diatomicmolecule.py
        function: create_diatomic_molecule
    resources:
      cpu: "1000m"
      memory: "1Gi"
      disk: "10Gi"
  inputs:
    - species1: "H"
      type: string
    - species2: "H"
      type: string
    - bond-lenght: 0.7
      type: float
  outputs:
    - name: molecule
      type: molecular-geometry
- name: run-psi4
  passed: [create-molecule]
  config:
    runtime:
      language: python3
      imports: [z-quantum-core, qe-openfermion, qe-psi4]
      parameters:
        file: qe-psi4/steps/psi4.py
        function: run_psi4_step
    resources:
      cpu: "1000m"
      memory: "1Gi"
      disk: "10Gi"
  inputs:
    - geometry: ((create-molecule.molecule))
      type: molecular-geometry
    - basis: "STO-3G"
      type: string
    - method: "scf"
      type: string
    - reference: "rhf"
      type: string
    - nthreads: 4
      type: int
    - save_hamiltonian: True
      type: bool
  outputs:
    - name: hamiltonian
      type: hamiltonian-operator
- name: transform-hamiltonian
  passed: [run-psi4]
  config:
    runtime:
      language: python3
      imports: [z-quantum-core, qe-openfermion]
      parameters:
        file: qe-openfermion/steps/transforms.py
        function: transform_interaction_operator
    resources:
      cpu: "1000m"
      memory: "1Gi"
      disk: "10Gi"
  inputs:
    - input-op: ((run-psi4.hamiltonian))
      type: hamiltonian-operator
    - transformation: "Jordan-Wigner"
      type: string
  outputs:
    - name: hamiltonian
      type: hamiltonian-operator
- name: generate-random-ansatz-params
  config:
    runtime:
      language: python3
      imports: [z-quantum-core, qe-openfermion, z-quantum-vqe]
      parameters:
        file: z-quantum-core/steps/circuit.py
        function: generate_random_ansatz_params
    resources:
      cpu: "1000m"
      memory: "1Gi"
      disk: "10Gi"
  inputs:
    - ansatz-specs: "{'module_name': 'zquantum.vqe.singlet_uccsd', 'function_name': 'SingletUCCSDAnsatz', 'number_of_spatial_orbitals': {{steps.run-psi4.outputs.parameters.n-mo}}, 'number_of_alpha_electrons': {{steps.run-psi4.outputs.parameters.n-alpha}}, 'transformation': 'Jordan-Wigner'}"
      type: string
    - min_value: -0.01
      type: float
    - max_value: 0.01
      type: float
    - seed: 9
      type: int
    - number_of_parameters: "None"
      type: string
  outputs:
    - name: params
      type: ansatz-params
- name: optimize-circuit
  passed: [transform-hamiltonian, generate-random-ansatz-params]
  config:
    runtime:
      language: python3
      imports: [z-quantum-core, qe-openfermion, z-quantum-optimizers, qe-qhipster, z-quantum-vqe]
      parameters:
        file: z-quantum-optimizers/steps/optimizers.py
        function: optimize_variational_circuit
    resources:
      cpu: "1000m"
      memory: "1Gi"
      disk: "10Gi"
  inputs:
    - ansatz-specs: "{'module_name': 'zquantum.vqe.singlet_uccsd', 'function_name': 'SingletUCCSDAnsatz', 'number_of_spatial_orbitals': {{steps.run-psi4.outputs.parameters.n-mo}}, 'number_of_alpha_electrons': {{steps.run-psi4.outputs.parameters.n-alpha}}, 'transformation': 'Jordan-Wigner'}"
      type: string
    - backend-specs: "{'module_name': 'qeqhipster.simulator', 'function_name': 'QHipsterSimulator'}"
      type: string
    - optimizer-specs: "{'module_name': 'zquantum.optimizers.scipy_optimizer', 'function_name': 'ScipyOptimizer', 'method': 'L-BFGS-B'}"
      type: string
    - cost-function-specs: "{'module_name': 'zquantum.core.cost_function', 'function_name': 'AnsatzBasedCostFunction', 'estimator-specs': { 'module_name': 'zquantum.core.estimator', 'function_name': 'ExactEstimator'}}"
      type: string
    - qubit-operator: ((transform-hamiltonian.hamiltonian))
      type: hamiltonian-operator
    - initial-parameters: ((generate-random-ansatz-parameters.params))
      type: ansatz-params
  outputs:
    - name: optimization-results
      type: opt-results

types:
  - molecular-geometry
  - hamiltonian-operator
  - ansatz-params
  - opt-results
